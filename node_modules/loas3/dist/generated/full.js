"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var t = __importStar(require("io-ts"));
var Schema = t.recursion("Schema", function () {
    return t.partial({
        title: t.string,
        multipleOf: t.number,
        maximum: t.number,
        exclusiveMaximum: t.boolean,
        minimum: t.number,
        exclusiveMinimum: t.boolean,
        maxLength: t.number,
        minLength: t.number,
        pattern: t.string,
        maxItems: t.number,
        minItems: t.number,
        uniqueItems: t.boolean,
        maxProperties: t.number,
        minProperties: t.number,
        required: t.array(t.string),
        enum: t.array(t.any),
        type: t.string,
        not: t.union([Reference, Schema]),
        allOf: t.array(t.union([Reference, Schema])),
        oneOf: t.array(t.union([Reference, Schema])),
        anyOf: t.array(t.union([Reference, Schema])),
        items: t.union([Reference, Schema, t.array(t.union([Reference, Schema]))]),
        properties: t.record(t.string, t.union([Reference, Schema])),
        additionalProperties: t.union([Reference, Schema, t.boolean]),
        description: t.string,
        format: t.string,
        default: t.any,
        nullable: t.boolean,
        discriminator: Discriminator,
        readOnly: t.boolean,
        writeOnly: t.boolean,
        example: t.any,
        externalDocs: ExternalDocumentation,
        deprecated: t.boolean,
        xml: XML
    });
});
var Encoding = t.recursion("Encoding", function () {
    return t.partial({
        contentType: t.string,
        headers: t.record(t.string, Header),
        style: t.string,
        explode: t.boolean,
        allowReserved: t.boolean
    });
});
var Header = t.recursion("Header", function () {
    return t.partial({
        description: t.string,
        required: t.boolean,
        deprecated: t.boolean,
        allowEmptyValue: t.boolean,
        style: t.string,
        explode: t.boolean,
        allowReserved: t.boolean,
        schema: t.union([Reference, Schema]),
        content: t.record(t.string, MediaType),
        example: t.any,
        examples: t.record(t.string, t.union([Reference, Example]))
    });
});
var Operation = t.recursion("Operation", function () {
    return t.intersection([
        t.type({
            responses: Responses
        }),
        t.partial({
            tags: t.array(t.string),
            summary: t.string,
            description: t.string,
            externalDocs: ExternalDocumentation,
            operationId: t.string,
            parameters: t.array(t.union([Reference, Parameter])),
            requestBody: t.union([Reference, RequestBody]),
            callbacks: t.record(t.string, t.union([Reference, Callback])),
            deprecated: t.boolean,
            security: t.array(SecurityRequirement),
            servers: t.array(Server)
        })
    ]);
});
var Callback = t.recursion("Callback", function () { return t.record(t.string, PathItem); });
var Reference = t.type({
    $ref: t.string
});
var Contact = t.partial({
    name: t.string,
    url: t.string,
    email: t.string
});
var License = t.intersection([
    t.type({
        name: t.string
    }),
    t.partial({
        url: t.string
    })
]);
var Info = t.intersection([
    t.type({
        title: t.string,
        version: t.string
    }),
    t.partial({
        description: t.string,
        termsOfService: t.string,
        contact: Contact,
        license: License
    })
]);
var ServerVariable = t.intersection([
    t.type({
        default: t.string
    }),
    t.partial({
        enum: t.array(t.string),
        description: t.string
    })
]);
var Server = t.intersection([
    t.type({
        url: t.string
    }),
    t.partial({
        description: t.string,
        variables: t.record(t.string, ServerVariable)
    })
]);
var Discriminator = t.intersection([
    t.type({
        propertyName: t.string
    }),
    t.partial({
        mapping: t.record(t.string, t.string)
    })
]);
var ExternalDocumentation = t.intersection([
    t.type({
        url: t.string
    }),
    t.partial({
        description: t.string
    })
]);
var XML = t.partial({
    name: t.string,
    namespace: t.string,
    prefix: t.string,
    attribute: t.boolean,
    wrapped: t.boolean
});
var Example = t.partial({
    summary: t.string,
    description: t.string,
    value: t.any,
    externalValue: t.string
});
var MediaType = t.partial({
    schema: t.union([Reference, Schema]),
    example: t.any,
    examples: t.record(t.string, t.union([Reference, Example])),
    encoding: t.record(t.string, Encoding)
});
var Link = t.partial({
    operationId: t.string,
    operationRef: t.string,
    parameters: t.record(t.string, t.any),
    requestBody: t.any,
    description: t.string,
    server: Server
});
var Response = t.intersection([
    t.type({
        description: t.string
    }),
    t.partial({
        headers: t.record(t.string, t.union([Reference, Header])),
        content: t.record(t.string, MediaType),
        links: t.record(t.string, t.union([Reference, Link]))
    })
]);
var Parameter = t.intersection([
    t.type({
        name: t.string,
        in: t.string
    }),
    t.partial({
        description: t.string,
        required: t.boolean,
        deprecated: t.boolean,
        allowEmptyValue: t.boolean,
        style: t.string,
        explode: t.boolean,
        allowReserved: t.boolean,
        schema: t.union([Reference, Schema]),
        content: t.record(t.string, MediaType),
        example: t.any,
        examples: t.record(t.string, t.union([Reference, Example]))
    })
]);
var RequestBody = t.intersection([
    t.type({
        content: t.record(t.string, MediaType)
    }),
    t.partial({
        description: t.string,
        required: t.boolean
    })
]);
var APIKeySecurityScheme = t.intersection([
    t.type({
        type: t.string,
        name: t.string,
        in: t.string
    }),
    t.partial({
        description: t.string
    })
]);
var HTTPSecurityScheme = t.intersection([
    t.type({
        scheme: t.string,
        type: t.string
    }),
    t.partial({
        bearerFormat: t.string,
        description: t.string
    })
]);
var ImplicitOAuthFlow = t.intersection([
    t.type({
        authorizationUrl: t.string,
        scopes: t.record(t.string, t.string)
    }),
    t.partial({
        refreshUrl: t.string
    })
]);
var PasswordOAuthFlow = t.intersection([
    t.type({
        tokenUrl: t.string
    }),
    t.partial({
        refreshUrl: t.string,
        scopes: t.record(t.string, t.string)
    })
]);
var ClientCredentialsFlow = t.intersection([
    t.type({
        tokenUrl: t.string
    }),
    t.partial({
        refreshUrl: t.string,
        scopes: t.record(t.string, t.string)
    })
]);
var AuthorizationCodeOAuthFlow = t.intersection([
    t.type({
        authorizationUrl: t.string,
        tokenUrl: t.string
    }),
    t.partial({
        refreshUrl: t.string,
        scopes: t.record(t.string, t.string)
    })
]);
var OAuthFlows = t.partial({
    implicit: ImplicitOAuthFlow,
    password: PasswordOAuthFlow,
    clientCredentials: ClientCredentialsFlow,
    authorizationCode: AuthorizationCodeOAuthFlow
});
var OAuth2SecurityScheme = t.intersection([
    t.type({
        type: t.string,
        flows: OAuthFlows
    }),
    t.partial({
        description: t.string
    })
]);
var OpenIdConnectSecurityScheme = t.intersection([
    t.type({
        type: t.string,
        openIdConnectUrl: t.string
    }),
    t.partial({
        description: t.string
    })
]);
var SecurityScheme = t.union([
    APIKeySecurityScheme,
    HTTPSecurityScheme,
    OAuth2SecurityScheme,
    OpenIdConnectSecurityScheme,
    t.string
]);
var Responses = t.partial({
    "100": t.union([Reference, Response]),
    "101": t.union([Reference, Response]),
    "102": t.union([Reference, Response]),
    "103": t.union([Reference, Response]),
    "104": t.union([Reference, Response]),
    "105": t.union([Reference, Response]),
    "106": t.union([Reference, Response]),
    "107": t.union([Reference, Response]),
    "108": t.union([Reference, Response]),
    "109": t.union([Reference, Response]),
    "110": t.union([Reference, Response]),
    "111": t.union([Reference, Response]),
    "112": t.union([Reference, Response]),
    "113": t.union([Reference, Response]),
    "114": t.union([Reference, Response]),
    "115": t.union([Reference, Response]),
    "116": t.union([Reference, Response]),
    "117": t.union([Reference, Response]),
    "118": t.union([Reference, Response]),
    "119": t.union([Reference, Response]),
    "120": t.union([Reference, Response]),
    "121": t.union([Reference, Response]),
    "122": t.union([Reference, Response]),
    "123": t.union([Reference, Response]),
    "124": t.union([Reference, Response]),
    "125": t.union([Reference, Response]),
    "126": t.union([Reference, Response]),
    "127": t.union([Reference, Response]),
    "128": t.union([Reference, Response]),
    "129": t.union([Reference, Response]),
    "130": t.union([Reference, Response]),
    "131": t.union([Reference, Response]),
    "132": t.union([Reference, Response]),
    "133": t.union([Reference, Response]),
    "134": t.union([Reference, Response]),
    "135": t.union([Reference, Response]),
    "136": t.union([Reference, Response]),
    "137": t.union([Reference, Response]),
    "138": t.union([Reference, Response]),
    "139": t.union([Reference, Response]),
    "140": t.union([Reference, Response]),
    "141": t.union([Reference, Response]),
    "142": t.union([Reference, Response]),
    "143": t.union([Reference, Response]),
    "144": t.union([Reference, Response]),
    "145": t.union([Reference, Response]),
    "146": t.union([Reference, Response]),
    "147": t.union([Reference, Response]),
    "148": t.union([Reference, Response]),
    "149": t.union([Reference, Response]),
    "150": t.union([Reference, Response]),
    "151": t.union([Reference, Response]),
    "152": t.union([Reference, Response]),
    "153": t.union([Reference, Response]),
    "154": t.union([Reference, Response]),
    "155": t.union([Reference, Response]),
    "156": t.union([Reference, Response]),
    "157": t.union([Reference, Response]),
    "158": t.union([Reference, Response]),
    "159": t.union([Reference, Response]),
    "160": t.union([Reference, Response]),
    "161": t.union([Reference, Response]),
    "162": t.union([Reference, Response]),
    "163": t.union([Reference, Response]),
    "164": t.union([Reference, Response]),
    "165": t.union([Reference, Response]),
    "166": t.union([Reference, Response]),
    "167": t.union([Reference, Response]),
    "168": t.union([Reference, Response]),
    "169": t.union([Reference, Response]),
    "170": t.union([Reference, Response]),
    "171": t.union([Reference, Response]),
    "172": t.union([Reference, Response]),
    "173": t.union([Reference, Response]),
    "174": t.union([Reference, Response]),
    "175": t.union([Reference, Response]),
    "176": t.union([Reference, Response]),
    "177": t.union([Reference, Response]),
    "178": t.union([Reference, Response]),
    "179": t.union([Reference, Response]),
    "180": t.union([Reference, Response]),
    "181": t.union([Reference, Response]),
    "182": t.union([Reference, Response]),
    "183": t.union([Reference, Response]),
    "184": t.union([Reference, Response]),
    "185": t.union([Reference, Response]),
    "186": t.union([Reference, Response]),
    "187": t.union([Reference, Response]),
    "188": t.union([Reference, Response]),
    "189": t.union([Reference, Response]),
    "190": t.union([Reference, Response]),
    "191": t.union([Reference, Response]),
    "192": t.union([Reference, Response]),
    "193": t.union([Reference, Response]),
    "194": t.union([Reference, Response]),
    "195": t.union([Reference, Response]),
    "196": t.union([Reference, Response]),
    "197": t.union([Reference, Response]),
    "198": t.union([Reference, Response]),
    "199": t.union([Reference, Response]),
    "200": t.union([Reference, Response]),
    "201": t.union([Reference, Response]),
    "202": t.union([Reference, Response]),
    "203": t.union([Reference, Response]),
    "204": t.union([Reference, Response]),
    "205": t.union([Reference, Response]),
    "206": t.union([Reference, Response]),
    "207": t.union([Reference, Response]),
    "208": t.union([Reference, Response]),
    "209": t.union([Reference, Response]),
    "210": t.union([Reference, Response]),
    "211": t.union([Reference, Response]),
    "212": t.union([Reference, Response]),
    "213": t.union([Reference, Response]),
    "214": t.union([Reference, Response]),
    "215": t.union([Reference, Response]),
    "216": t.union([Reference, Response]),
    "217": t.union([Reference, Response]),
    "218": t.union([Reference, Response]),
    "219": t.union([Reference, Response]),
    "220": t.union([Reference, Response]),
    "221": t.union([Reference, Response]),
    "222": t.union([Reference, Response]),
    "223": t.union([Reference, Response]),
    "224": t.union([Reference, Response]),
    "225": t.union([Reference, Response]),
    "226": t.union([Reference, Response]),
    "227": t.union([Reference, Response]),
    "228": t.union([Reference, Response]),
    "229": t.union([Reference, Response]),
    "230": t.union([Reference, Response]),
    "231": t.union([Reference, Response]),
    "232": t.union([Reference, Response]),
    "233": t.union([Reference, Response]),
    "234": t.union([Reference, Response]),
    "235": t.union([Reference, Response]),
    "236": t.union([Reference, Response]),
    "237": t.union([Reference, Response]),
    "238": t.union([Reference, Response]),
    "239": t.union([Reference, Response]),
    "240": t.union([Reference, Response]),
    "241": t.union([Reference, Response]),
    "242": t.union([Reference, Response]),
    "243": t.union([Reference, Response]),
    "244": t.union([Reference, Response]),
    "245": t.union([Reference, Response]),
    "246": t.union([Reference, Response]),
    "247": t.union([Reference, Response]),
    "248": t.union([Reference, Response]),
    "249": t.union([Reference, Response]),
    "250": t.union([Reference, Response]),
    "251": t.union([Reference, Response]),
    "252": t.union([Reference, Response]),
    "253": t.union([Reference, Response]),
    "254": t.union([Reference, Response]),
    "255": t.union([Reference, Response]),
    "256": t.union([Reference, Response]),
    "257": t.union([Reference, Response]),
    "258": t.union([Reference, Response]),
    "259": t.union([Reference, Response]),
    "260": t.union([Reference, Response]),
    "261": t.union([Reference, Response]),
    "262": t.union([Reference, Response]),
    "263": t.union([Reference, Response]),
    "264": t.union([Reference, Response]),
    "265": t.union([Reference, Response]),
    "266": t.union([Reference, Response]),
    "267": t.union([Reference, Response]),
    "268": t.union([Reference, Response]),
    "269": t.union([Reference, Response]),
    "270": t.union([Reference, Response]),
    "271": t.union([Reference, Response]),
    "272": t.union([Reference, Response]),
    "273": t.union([Reference, Response]),
    "274": t.union([Reference, Response]),
    "275": t.union([Reference, Response]),
    "276": t.union([Reference, Response]),
    "277": t.union([Reference, Response]),
    "278": t.union([Reference, Response]),
    "279": t.union([Reference, Response]),
    "280": t.union([Reference, Response]),
    "281": t.union([Reference, Response]),
    "282": t.union([Reference, Response]),
    "283": t.union([Reference, Response]),
    "284": t.union([Reference, Response]),
    "285": t.union([Reference, Response]),
    "286": t.union([Reference, Response]),
    "287": t.union([Reference, Response]),
    "288": t.union([Reference, Response]),
    "289": t.union([Reference, Response]),
    "290": t.union([Reference, Response]),
    "291": t.union([Reference, Response]),
    "292": t.union([Reference, Response]),
    "293": t.union([Reference, Response]),
    "294": t.union([Reference, Response]),
    "295": t.union([Reference, Response]),
    "296": t.union([Reference, Response]),
    "297": t.union([Reference, Response]),
    "298": t.union([Reference, Response]),
    "299": t.union([Reference, Response]),
    "300": t.union([Reference, Response]),
    "301": t.union([Reference, Response]),
    "302": t.union([Reference, Response]),
    "303": t.union([Reference, Response]),
    "304": t.union([Reference, Response]),
    "305": t.union([Reference, Response]),
    "306": t.union([Reference, Response]),
    "307": t.union([Reference, Response]),
    "308": t.union([Reference, Response]),
    "309": t.union([Reference, Response]),
    "310": t.union([Reference, Response]),
    "311": t.union([Reference, Response]),
    "312": t.union([Reference, Response]),
    "313": t.union([Reference, Response]),
    "314": t.union([Reference, Response]),
    "315": t.union([Reference, Response]),
    "316": t.union([Reference, Response]),
    "317": t.union([Reference, Response]),
    "318": t.union([Reference, Response]),
    "319": t.union([Reference, Response]),
    "320": t.union([Reference, Response]),
    "321": t.union([Reference, Response]),
    "322": t.union([Reference, Response]),
    "323": t.union([Reference, Response]),
    "324": t.union([Reference, Response]),
    "325": t.union([Reference, Response]),
    "326": t.union([Reference, Response]),
    "327": t.union([Reference, Response]),
    "328": t.union([Reference, Response]),
    "329": t.union([Reference, Response]),
    "330": t.union([Reference, Response]),
    "331": t.union([Reference, Response]),
    "332": t.union([Reference, Response]),
    "333": t.union([Reference, Response]),
    "334": t.union([Reference, Response]),
    "335": t.union([Reference, Response]),
    "336": t.union([Reference, Response]),
    "337": t.union([Reference, Response]),
    "338": t.union([Reference, Response]),
    "339": t.union([Reference, Response]),
    "340": t.union([Reference, Response]),
    "341": t.union([Reference, Response]),
    "342": t.union([Reference, Response]),
    "343": t.union([Reference, Response]),
    "344": t.union([Reference, Response]),
    "345": t.union([Reference, Response]),
    "346": t.union([Reference, Response]),
    "347": t.union([Reference, Response]),
    "348": t.union([Reference, Response]),
    "349": t.union([Reference, Response]),
    "350": t.union([Reference, Response]),
    "351": t.union([Reference, Response]),
    "352": t.union([Reference, Response]),
    "353": t.union([Reference, Response]),
    "354": t.union([Reference, Response]),
    "355": t.union([Reference, Response]),
    "356": t.union([Reference, Response]),
    "357": t.union([Reference, Response]),
    "358": t.union([Reference, Response]),
    "359": t.union([Reference, Response]),
    "360": t.union([Reference, Response]),
    "361": t.union([Reference, Response]),
    "362": t.union([Reference, Response]),
    "363": t.union([Reference, Response]),
    "364": t.union([Reference, Response]),
    "365": t.union([Reference, Response]),
    "366": t.union([Reference, Response]),
    "367": t.union([Reference, Response]),
    "368": t.union([Reference, Response]),
    "369": t.union([Reference, Response]),
    "370": t.union([Reference, Response]),
    "371": t.union([Reference, Response]),
    "372": t.union([Reference, Response]),
    "373": t.union([Reference, Response]),
    "374": t.union([Reference, Response]),
    "375": t.union([Reference, Response]),
    "376": t.union([Reference, Response]),
    "377": t.union([Reference, Response]),
    "378": t.union([Reference, Response]),
    "379": t.union([Reference, Response]),
    "380": t.union([Reference, Response]),
    "381": t.union([Reference, Response]),
    "382": t.union([Reference, Response]),
    "383": t.union([Reference, Response]),
    "384": t.union([Reference, Response]),
    "385": t.union([Reference, Response]),
    "386": t.union([Reference, Response]),
    "387": t.union([Reference, Response]),
    "388": t.union([Reference, Response]),
    "389": t.union([Reference, Response]),
    "390": t.union([Reference, Response]),
    "391": t.union([Reference, Response]),
    "392": t.union([Reference, Response]),
    "393": t.union([Reference, Response]),
    "394": t.union([Reference, Response]),
    "395": t.union([Reference, Response]),
    "396": t.union([Reference, Response]),
    "397": t.union([Reference, Response]),
    "398": t.union([Reference, Response]),
    "399": t.union([Reference, Response]),
    "400": t.union([Reference, Response]),
    "401": t.union([Reference, Response]),
    "402": t.union([Reference, Response]),
    "403": t.union([Reference, Response]),
    "404": t.union([Reference, Response]),
    "405": t.union([Reference, Response]),
    "406": t.union([Reference, Response]),
    "407": t.union([Reference, Response]),
    "408": t.union([Reference, Response]),
    "409": t.union([Reference, Response]),
    "410": t.union([Reference, Response]),
    "411": t.union([Reference, Response]),
    "412": t.union([Reference, Response]),
    "413": t.union([Reference, Response]),
    "414": t.union([Reference, Response]),
    "415": t.union([Reference, Response]),
    "416": t.union([Reference, Response]),
    "417": t.union([Reference, Response]),
    "418": t.union([Reference, Response]),
    "419": t.union([Reference, Response]),
    "420": t.union([Reference, Response]),
    "421": t.union([Reference, Response]),
    "422": t.union([Reference, Response]),
    "423": t.union([Reference, Response]),
    "424": t.union([Reference, Response]),
    "425": t.union([Reference, Response]),
    "426": t.union([Reference, Response]),
    "427": t.union([Reference, Response]),
    "428": t.union([Reference, Response]),
    "429": t.union([Reference, Response]),
    "430": t.union([Reference, Response]),
    "431": t.union([Reference, Response]),
    "432": t.union([Reference, Response]),
    "433": t.union([Reference, Response]),
    "434": t.union([Reference, Response]),
    "435": t.union([Reference, Response]),
    "436": t.union([Reference, Response]),
    "437": t.union([Reference, Response]),
    "438": t.union([Reference, Response]),
    "439": t.union([Reference, Response]),
    "440": t.union([Reference, Response]),
    "441": t.union([Reference, Response]),
    "442": t.union([Reference, Response]),
    "443": t.union([Reference, Response]),
    "444": t.union([Reference, Response]),
    "445": t.union([Reference, Response]),
    "446": t.union([Reference, Response]),
    "447": t.union([Reference, Response]),
    "448": t.union([Reference, Response]),
    "449": t.union([Reference, Response]),
    "450": t.union([Reference, Response]),
    "451": t.union([Reference, Response]),
    "452": t.union([Reference, Response]),
    "453": t.union([Reference, Response]),
    "454": t.union([Reference, Response]),
    "455": t.union([Reference, Response]),
    "456": t.union([Reference, Response]),
    "457": t.union([Reference, Response]),
    "458": t.union([Reference, Response]),
    "459": t.union([Reference, Response]),
    "460": t.union([Reference, Response]),
    "461": t.union([Reference, Response]),
    "462": t.union([Reference, Response]),
    "463": t.union([Reference, Response]),
    "464": t.union([Reference, Response]),
    "465": t.union([Reference, Response]),
    "466": t.union([Reference, Response]),
    "467": t.union([Reference, Response]),
    "468": t.union([Reference, Response]),
    "469": t.union([Reference, Response]),
    "470": t.union([Reference, Response]),
    "471": t.union([Reference, Response]),
    "472": t.union([Reference, Response]),
    "473": t.union([Reference, Response]),
    "474": t.union([Reference, Response]),
    "475": t.union([Reference, Response]),
    "476": t.union([Reference, Response]),
    "477": t.union([Reference, Response]),
    "478": t.union([Reference, Response]),
    "479": t.union([Reference, Response]),
    "480": t.union([Reference, Response]),
    "481": t.union([Reference, Response]),
    "482": t.union([Reference, Response]),
    "483": t.union([Reference, Response]),
    "484": t.union([Reference, Response]),
    "485": t.union([Reference, Response]),
    "486": t.union([Reference, Response]),
    "487": t.union([Reference, Response]),
    "488": t.union([Reference, Response]),
    "489": t.union([Reference, Response]),
    "490": t.union([Reference, Response]),
    "491": t.union([Reference, Response]),
    "492": t.union([Reference, Response]),
    "493": t.union([Reference, Response]),
    "494": t.union([Reference, Response]),
    "495": t.union([Reference, Response]),
    "496": t.union([Reference, Response]),
    "497": t.union([Reference, Response]),
    "498": t.union([Reference, Response]),
    "499": t.union([Reference, Response]),
    "500": t.union([Reference, Response]),
    "501": t.union([Reference, Response]),
    "502": t.union([Reference, Response]),
    "503": t.union([Reference, Response]),
    "504": t.union([Reference, Response]),
    "505": t.union([Reference, Response]),
    "506": t.union([Reference, Response]),
    "507": t.union([Reference, Response]),
    "508": t.union([Reference, Response]),
    "509": t.union([Reference, Response]),
    "510": t.union([Reference, Response]),
    "511": t.union([Reference, Response]),
    "512": t.union([Reference, Response]),
    "513": t.union([Reference, Response]),
    "514": t.union([Reference, Response]),
    "515": t.union([Reference, Response]),
    "516": t.union([Reference, Response]),
    "517": t.union([Reference, Response]),
    "518": t.union([Reference, Response]),
    "519": t.union([Reference, Response]),
    "520": t.union([Reference, Response]),
    "521": t.union([Reference, Response]),
    "522": t.union([Reference, Response]),
    "523": t.union([Reference, Response]),
    "524": t.union([Reference, Response]),
    "525": t.union([Reference, Response]),
    "526": t.union([Reference, Response]),
    "527": t.union([Reference, Response]),
    "528": t.union([Reference, Response]),
    "529": t.union([Reference, Response]),
    "530": t.union([Reference, Response]),
    "531": t.union([Reference, Response]),
    "532": t.union([Reference, Response]),
    "533": t.union([Reference, Response]),
    "534": t.union([Reference, Response]),
    "535": t.union([Reference, Response]),
    "536": t.union([Reference, Response]),
    "537": t.union([Reference, Response]),
    "538": t.union([Reference, Response]),
    "539": t.union([Reference, Response]),
    "540": t.union([Reference, Response]),
    "541": t.union([Reference, Response]),
    "542": t.union([Reference, Response]),
    "543": t.union([Reference, Response]),
    "544": t.union([Reference, Response]),
    "545": t.union([Reference, Response]),
    "546": t.union([Reference, Response]),
    "547": t.union([Reference, Response]),
    "548": t.union([Reference, Response]),
    "549": t.union([Reference, Response]),
    "550": t.union([Reference, Response]),
    "551": t.union([Reference, Response]),
    "552": t.union([Reference, Response]),
    "553": t.union([Reference, Response]),
    "554": t.union([Reference, Response]),
    "555": t.union([Reference, Response]),
    "556": t.union([Reference, Response]),
    "557": t.union([Reference, Response]),
    "558": t.union([Reference, Response]),
    "559": t.union([Reference, Response]),
    "560": t.union([Reference, Response]),
    "561": t.union([Reference, Response]),
    "562": t.union([Reference, Response]),
    "563": t.union([Reference, Response]),
    "564": t.union([Reference, Response]),
    "565": t.union([Reference, Response]),
    "566": t.union([Reference, Response]),
    "567": t.union([Reference, Response]),
    "568": t.union([Reference, Response]),
    "569": t.union([Reference, Response]),
    "570": t.union([Reference, Response]),
    "571": t.union([Reference, Response]),
    "572": t.union([Reference, Response]),
    "573": t.union([Reference, Response]),
    "574": t.union([Reference, Response]),
    "575": t.union([Reference, Response]),
    "576": t.union([Reference, Response]),
    "577": t.union([Reference, Response]),
    "578": t.union([Reference, Response]),
    "579": t.union([Reference, Response]),
    "580": t.union([Reference, Response]),
    "581": t.union([Reference, Response]),
    "582": t.union([Reference, Response]),
    "583": t.union([Reference, Response]),
    "584": t.union([Reference, Response]),
    "585": t.union([Reference, Response]),
    "586": t.union([Reference, Response]),
    "587": t.union([Reference, Response]),
    "588": t.union([Reference, Response]),
    "589": t.union([Reference, Response]),
    "590": t.union([Reference, Response]),
    "591": t.union([Reference, Response]),
    "592": t.union([Reference, Response]),
    "593": t.union([Reference, Response]),
    "594": t.union([Reference, Response]),
    "595": t.union([Reference, Response]),
    "596": t.union([Reference, Response]),
    "597": t.union([Reference, Response]),
    "598": t.union([Reference, Response]),
    "599": t.union([Reference, Response]),
    default: t.union([Reference, Response])
});
var SecurityRequirement = t.record(t.string, t.array(t.string));
var PathItem = t.partial({
    $ref: t.string,
    summary: t.string,
    description: t.string,
    servers: t.array(Server),
    parameters: t.array(t.union([Reference, Parameter])),
    get: Operation,
    put: Operation,
    post: Operation,
    delete: Operation,
    options: Operation,
    head: Operation,
    patch: Operation,
    trace: Operation
});
var Components = t.partial({
    schemas: t.record(t.string, t.union([Reference, Schema])),
    responses: t.record(t.string, t.union([Reference, Response])),
    parameters: t.record(t.string, t.union([Reference, Parameter])),
    examples: t.record(t.string, t.union([Reference, Example])),
    requestBodies: t.record(t.string, t.union([Reference, RequestBody])),
    headers: t.record(t.string, t.union([Reference, Header])),
    securitySchemes: t.record(t.string, t.union([Reference, SecurityScheme])),
    links: t.record(t.string, t.union([Reference, Link])),
    callbacks: t.record(t.string, t.union([Reference, Callback]))
});
var Paths = t.record(t.string, PathItem);
var Tag = t.intersection([
    t.type({
        name: t.string
    }),
    t.partial({
        description: t.string,
        externalDocs: ExternalDocumentation
    })
]);
var ExampleXORExamples = t.string;
var SchemaXORContent = t.union([t.string, t.string, t.string, t.string]);
var ParameterLocation = t.union([
    t.string,
    t.string,
    t.string,
    t.string,
    t.string
]);
var OpenAPIObject = t.intersection([
    t.type({
        openapi: t.string,
        info: Info,
        paths: Paths
    }),
    t.partial({
        externalDocs: ExternalDocumentation,
        servers: t.array(Server),
        security: t.array(SecurityRequirement),
        tags: t.array(Tag),
        components: Components
    })
]);
exports.isReference = function (u) { return Reference.is(u); };
exports.isInfo = function (u) {
    return Info.is(u) &&
        new Set(__spread([
            "title",
            "description",
            "termsOfService",
            "contact",
            "license",
            "version"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 6;
};
exports.isContact = function (u) {
    return Contact.is(u) &&
        new Set(__spread(["name", "url", "email"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isLicense = function (u) {
    return License.is(u) &&
        new Set(__spread(["name", "url"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 2;
};
exports.isServer = function (u) {
    return Server.is(u) &&
        new Set(__spread(["url", "description", "variables"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isServerVariable = function (u) {
    return ServerVariable.is(u) &&
        new Set(__spread(["enum", "default", "description"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isComponents = function (u) {
    return Components.is(u) &&
        new Set(__spread([
            "schemas",
            "responses",
            "parameters",
            "examples",
            "requestBodies",
            "headers",
            "securitySchemes",
            "links",
            "callbacks"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 9;
};
exports.isSchema = function (u) {
    return Schema.is(u) &&
        new Set(__spread([
            "title",
            "multipleOf",
            "maximum",
            "exclusiveMaximum",
            "minimum",
            "exclusiveMinimum",
            "maxLength",
            "minLength",
            "pattern",
            "maxItems",
            "minItems",
            "uniqueItems",
            "maxProperties",
            "minProperties",
            "required",
            "enum",
            "type",
            "not",
            "allOf",
            "oneOf",
            "anyOf",
            "items",
            "properties",
            "additionalProperties",
            "description",
            "format",
            "default",
            "nullable",
            "discriminator",
            "readOnly",
            "writeOnly",
            "example",
            "externalDocs",
            "deprecated",
            "xml"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 35;
};
exports.isDiscriminator = function (u) {
    return Discriminator.is(u);
};
exports.isXML = function (u) {
    return XML.is(u) &&
        new Set(__spread(["name", "namespace", "prefix", "attribute", "wrapped"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 5;
};
exports.isResponse = function (u) {
    return Response.is(u) &&
        new Set(__spread(["description", "headers", "content", "links"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 4;
};
exports.isMediaType = function (u) {
    return MediaType.is(u) &&
        new Set(__spread(["schema", "example", "examples", "encoding"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 4;
};
exports.isExample = function (u) {
    return Example.is(u) &&
        new Set(__spread(["summary", "description", "value", "externalValue"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 4;
};
exports.isHeader = function (u) {
    return Header.is(u) &&
        new Set(__spread([
            "description",
            "required",
            "deprecated",
            "allowEmptyValue",
            "style",
            "explode",
            "allowReserved",
            "schema",
            "content",
            "example",
            "examples"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 11;
};
exports.isPaths = function (u) { return Paths.is(u); };
exports.isPathItem = function (u) {
    return PathItem.is(u) &&
        new Set(__spread([
            "$ref",
            "summary",
            "description",
            "servers",
            "parameters",
            "get",
            "put",
            "post",
            "delete",
            "options",
            "head",
            "patch",
            "trace"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 13;
};
exports.isOperation = function (u) {
    return Operation.is(u) &&
        new Set(__spread([
            "tags",
            "summary",
            "description",
            "externalDocs",
            "operationId",
            "parameters",
            "requestBody",
            "responses",
            "callbacks",
            "deprecated",
            "security",
            "servers"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 12;
};
exports.isResponses = function (u) {
    return Responses.is(u) &&
        new Set(__spread([
            "100",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "110",
            "111",
            "112",
            "113",
            "114",
            "115",
            "116",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "129",
            "130",
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139",
            "140",
            "141",
            "142",
            "143",
            "144",
            "145",
            "146",
            "147",
            "148",
            "149",
            "150",
            "151",
            "152",
            "153",
            "154",
            "155",
            "156",
            "157",
            "158",
            "159",
            "160",
            "161",
            "162",
            "163",
            "164",
            "165",
            "166",
            "167",
            "168",
            "169",
            "170",
            "171",
            "172",
            "173",
            "174",
            "175",
            "176",
            "177",
            "178",
            "179",
            "180",
            "181",
            "182",
            "183",
            "184",
            "185",
            "186",
            "187",
            "188",
            "189",
            "190",
            "191",
            "192",
            "193",
            "194",
            "195",
            "196",
            "197",
            "198",
            "199",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "209",
            "210",
            "211",
            "212",
            "213",
            "214",
            "215",
            "216",
            "217",
            "218",
            "219",
            "220",
            "221",
            "222",
            "223",
            "224",
            "225",
            "226",
            "227",
            "228",
            "229",
            "230",
            "231",
            "232",
            "233",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "242",
            "243",
            "244",
            "245",
            "246",
            "247",
            "248",
            "249",
            "250",
            "251",
            "252",
            "253",
            "254",
            "255",
            "256",
            "257",
            "258",
            "259",
            "260",
            "261",
            "262",
            "263",
            "264",
            "265",
            "266",
            "267",
            "268",
            "269",
            "270",
            "271",
            "272",
            "273",
            "274",
            "275",
            "276",
            "277",
            "278",
            "279",
            "280",
            "281",
            "282",
            "283",
            "284",
            "285",
            "286",
            "287",
            "288",
            "289",
            "290",
            "291",
            "292",
            "293",
            "294",
            "295",
            "296",
            "297",
            "298",
            "299",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "306",
            "307",
            "308",
            "309",
            "310",
            "311",
            "312",
            "313",
            "314",
            "315",
            "316",
            "317",
            "318",
            "319",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "328",
            "329",
            "330",
            "331",
            "332",
            "333",
            "334",
            "335",
            "336",
            "337",
            "338",
            "339",
            "340",
            "341",
            "342",
            "343",
            "344",
            "345",
            "346",
            "347",
            "348",
            "349",
            "350",
            "351",
            "352",
            "353",
            "354",
            "355",
            "356",
            "357",
            "358",
            "359",
            "360",
            "361",
            "362",
            "363",
            "364",
            "365",
            "366",
            "367",
            "368",
            "369",
            "370",
            "371",
            "372",
            "373",
            "374",
            "375",
            "376",
            "377",
            "378",
            "379",
            "380",
            "381",
            "382",
            "383",
            "384",
            "385",
            "386",
            "387",
            "388",
            "389",
            "390",
            "391",
            "392",
            "393",
            "394",
            "395",
            "396",
            "397",
            "398",
            "399",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "425",
            "426",
            "427",
            "428",
            "429",
            "430",
            "431",
            "432",
            "433",
            "434",
            "435",
            "436",
            "437",
            "438",
            "439",
            "440",
            "441",
            "442",
            "443",
            "444",
            "445",
            "446",
            "447",
            "448",
            "449",
            "450",
            "451",
            "452",
            "453",
            "454",
            "455",
            "456",
            "457",
            "458",
            "459",
            "460",
            "461",
            "462",
            "463",
            "464",
            "465",
            "466",
            "467",
            "468",
            "469",
            "470",
            "471",
            "472",
            "473",
            "474",
            "475",
            "476",
            "477",
            "478",
            "479",
            "480",
            "481",
            "482",
            "483",
            "484",
            "485",
            "486",
            "487",
            "488",
            "489",
            "490",
            "491",
            "492",
            "493",
            "494",
            "495",
            "496",
            "497",
            "498",
            "499",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511",
            "512",
            "513",
            "514",
            "515",
            "516",
            "517",
            "518",
            "519",
            "520",
            "521",
            "522",
            "523",
            "524",
            "525",
            "526",
            "527",
            "528",
            "529",
            "530",
            "531",
            "532",
            "533",
            "534",
            "535",
            "536",
            "537",
            "538",
            "539",
            "540",
            "541",
            "542",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "549",
            "550",
            "551",
            "552",
            "553",
            "554",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "573",
            "574",
            "575",
            "576",
            "577",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595",
            "596",
            "597",
            "598",
            "599",
            "default"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 501;
};
exports.isSecurityRequirement = function (u) {
    return SecurityRequirement.is(u);
};
exports.isTag = function (u) {
    return Tag.is(u) &&
        new Set(__spread(["name", "description", "externalDocs"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isExternalDocumentation = function (u) {
    return ExternalDocumentation.is(u) &&
        new Set(__spread(["description", "url"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 2;
};
exports.isExampleXORExamples = function (u) {
    return ExampleXORExamples.is(u);
};
exports.isSchemaXORContent = function (u) {
    return SchemaXORContent.is(u);
};
exports.isParameter = function (u) {
    return Parameter.is(u) &&
        new Set(__spread([
            "name",
            "in",
            "description",
            "required",
            "deprecated",
            "allowEmptyValue",
            "style",
            "explode",
            "allowReserved",
            "schema",
            "content",
            "example",
            "examples"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 13;
};
exports.isParameterLocation = function (u) {
    return ParameterLocation.is(u);
};
exports.isRequestBody = function (u) {
    return RequestBody.is(u) &&
        new Set(__spread(["description", "content", "required"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isSecurityScheme = function (u) {
    return SecurityScheme.is(u);
};
exports.isAPIKeySecurityScheme = function (u) {
    return APIKeySecurityScheme.is(u) &&
        new Set(__spread(["type", "name", "in", "description"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 4;
};
exports.isHTTPSecurityScheme = function (u) {
    return HTTPSecurityScheme.is(u) &&
        new Set(__spread(["scheme", "bearerFormat", "description", "type"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 4;
};
exports.isOAuth2SecurityScheme = function (u) {
    return OAuth2SecurityScheme.is(u) &&
        new Set(__spread(["type", "flows", "description"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isOpenIdConnectSecurityScheme = function (u) {
    return OpenIdConnectSecurityScheme.is(u) &&
        new Set(__spread(["type", "openIdConnectUrl", "description"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isOAuthFlows = function (u) {
    return OAuthFlows.is(u) &&
        new Set(__spread(["implicit", "password", "clientCredentials", "authorizationCode"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 4;
};
exports.isImplicitOAuthFlow = function (u) {
    return ImplicitOAuthFlow.is(u) &&
        new Set(__spread(["authorizationUrl", "refreshUrl", "scopes"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isPasswordOAuthFlow = function (u) {
    return PasswordOAuthFlow.is(u) &&
        new Set(__spread(["tokenUrl", "refreshUrl", "scopes"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isClientCredentialsFlow = function (u) {
    return ClientCredentialsFlow.is(u) &&
        new Set(__spread(["tokenUrl", "refreshUrl", "scopes"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 3;
};
exports.isAuthorizationCodeOAuthFlow = function (u) {
    return AuthorizationCodeOAuthFlow.is(u) &&
        new Set(__spread(["authorizationUrl", "tokenUrl", "refreshUrl", "scopes"], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 4;
};
exports.isLink = function (u) {
    return Link.is(u) &&
        new Set(__spread([
            "operationId",
            "operationRef",
            "parameters",
            "requestBody",
            "description",
            "server"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 6;
};
exports.isCallback = function (u) { return Callback.is(u); };
exports.isEncoding = function (u) { return Encoding.is(u); };
exports.isOpenAPIObject = function (u) {
    return OpenAPIObject.is(u) &&
        new Set(__spread([
            "openapi",
            "info",
            "externalDocs",
            "servers",
            "security",
            "tags",
            "paths",
            "components"
        ], Object.keys(u).filter(function (i) { return i.slice(0, 2) !== "x-"; }))).size === 8;
};
//# sourceMappingURL=full.js.map