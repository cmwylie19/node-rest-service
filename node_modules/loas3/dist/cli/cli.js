"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var __1 = __importDefault(require(".."));
var js_yaml_1 = __importDefault(require("js-yaml"));
var Either_1 = require("fp-ts/lib/Either");
var pipeable_1 = require("fp-ts/lib/pipeable");
var Console_1 = require("fp-ts/lib/Console");
/**
 * Return a side-effect that logs to console.
 */
function processArgs() {
    var args = process.argv.slice(2);
    if (args.length !== 1) {
        return Console_1.error("Expected one argument");
    }
    var pathToFile = args[0];
    var expandedSpec = processFile(pathToFile);
    var logToConsole = pipeable_1.pipe(expandedSpec, Either_1.map(function (spec) { return js_yaml_1.default.safeDump(spec); }), Either_1.fold(Console_1.error, Console_1.log));
    return logToConsole;
}
exports.processArgs = processArgs;
function parseYamlFileToObject(pathToFile) {
    return Either_1.tryCatch(function () {
        var contents = fs_1.default.readFileSync(pathToFile, "utf-8");
        return js_yaml_1.default.safeLoad(contents);
    }, function (e) { return ({ message: "Error reading file: " + JSON.stringify(e) }); });
}
var expandSpec = function (spec) {
    return pipeable_1.pipe(spec, __1.default, 
    // Map error to be compatible with IError
    Either_1.mapLeft(function (error) { return ({
        message: "Error parsing spec: " + JSON.stringify(error)
    }); }));
};
/**
 * Expand LOAS specification to OpenAPI object
 * @param pathToFile Path to file
 * @return OpenAPIObject or error
 */
function processFile(pathToFile) {
    return pipeable_1.pipe(pathToFile, parseYamlFileToObject, Either_1.chain(expandSpec));
}
exports.processFile = processFile;
//# sourceMappingURL=cli.js.map