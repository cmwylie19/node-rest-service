"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var schema_1 = __importDefault(require("./schema"));
exports._lazylazy = function (o, path) {
    return Object.entries(o).map(function (_a) {
        var _b = __read(_a, 2), a = _b[0], b = _b[1];
        return ({
            name: a,
            // if the name is foo, heck if {foo} the path, if not theere, default to query
            in: path.indexOf("{" + a + "}") !== -1 ? "path" : "query",
            schema: schema_1.default(b)
        });
    });
};
exports._lazy = function (_a) {
    var query = _a.query, header = _a.header, cookie = _a.cookie, path = _a.path;
    return __spread((query
        ? Object.entries(query).map(function (_a) {
            var _b = __read(_a, 2), name = _b[0], v = _b[1];
            return ({
                in: "query",
                name: name,
                schema: schema_1.default(v)
            });
        })
        : []), (header
        ? Object.entries(header).map(function (_a) {
            var _b = __read(_a, 2), name = _b[0], v = _b[1];
            return ({
                in: "header",
                name: name,
                schema: schema_1.default(v)
            });
        })
        : []), (path
        ? Object.entries(path).map(function (_a) {
            var _b = __read(_a, 2), name = _b[0], v = _b[1];
            return ({
                in: "path",
                name: name,
                schema: schema_1.default(v)
            });
        })
        : []), (cookie
        ? Object.entries(cookie).map(function (_a) {
            var _b = __read(_a, 2), name = _b[0], v = _b[1];
            return ({
                in: "cookie",
                name: name,
                schema: schema_1.default(v)
            });
        })
        : []));
};
//# sourceMappingURL=parameter.js.map