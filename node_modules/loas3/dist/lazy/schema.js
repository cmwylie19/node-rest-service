"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var lazy_1 = require("../generated/lazy");
var __ = function (_a) {
    var properties = _a.properties, additionalProperties = _a.additionalProperties, items = _a.items, allOf = _a.allOf, anyOf = _a.anyOf, oneOf = _a.oneOf, not = _a.not, rest = __rest(_a, ["properties", "additionalProperties", "items", "allOf", "anyOf", "oneOf", "not"]);
    return (__assign({}, rest, (properties
        ? {
            properties: Object.entries(properties)
                .map(function (_a) {
                var _b;
                var _c = __read(_a, 2), a = _c[0], b = _c[1];
                return (_b = {}, _b[a] = lazy_1.is$Reference(b) ? b : _(b), _b);
            })
                .reduce(function (a, b) { return (__assign({}, a, b)); }, {})
        }
        : {}), (items
        ? {
            items: lazy_1.is$Reference(items) ? items : _(items)
        }
        : {}), (not
        ? {
            not: lazy_1.is$Reference(not) ? not : _(not)
        }
        : {}), (allOf
        ? {
            allOf: allOf.map(function (i) { return (lazy_1.is$Reference(i) ? i : _(i)); })
        }
        : {}), (anyOf
        ? {
            anyOf: anyOf.map(function (i) { return (lazy_1.is$Reference(i) ? i : _(i)); })
        }
        : {}), (oneOf
        ? {
            oneOf: oneOf.map(function (i) { return (lazy_1.is$Reference(i) ? i : _(i)); })
        }
        : {}), (additionalProperties !== undefined
        ? {
            additionalProperties: lazy_1.is$Reference(additionalProperties)
                ? additionalProperties
                : typeof additionalProperties === "boolean"
                    ? additionalProperties
                    : _(additionalProperties)
        }
        : {})));
};
var un_x = function (o) {
    return Object.entries(o)
        .filter(function (_a) {
        var _b = __read(_a, 1), a = _b[0];
        return a.slice(0, 2) !== "x-";
    })
        .map(function (_a) {
        var _b;
        var _c = __read(_a, 2), a = _c[0], b = _c[1];
        return (_b = {}, _b[a] = b, _b);
    })
        .reduce(function (a, b) { return (__assign({}, a, b)); }, {});
};
var x = function (o) {
    return Object.entries(o)
        .filter(function (_a) {
        var _b = __read(_a, 1), a = _b[0];
        return a.slice(0, 2) === "x-";
    })
        .map(function (_a) {
        var _b;
        var _c = __read(_a, 2), a = _c[0], b = _c[1];
        return (_b = {}, _b[a] = b, _b);
    })
        .reduce(function (a, b) { return (__assign({}, a, b)); }, {});
};
var _ = function (o) {
    return lazy_1.is$SimpleBooleanSchema(o)
        ? {
            type: "boolean",
            default: o,
            example: o
        }
        : lazy_1.is$SimpleIntegerSchema(o)
            ? {
                type: "integer",
                format: "int64",
                default: o,
                example: o
            }
            : lazy_1.is$SimpleNumberSchema(o)
                ? {
                    type: "number",
                    format: "double",
                    default: o,
                    example: o
                }
                : lazy_1.is$SimpleStringSchema(o)
                    ? {
                        type: "string",
                        default: o,
                        example: o
                    }
                    : lazy_1.is$SimpleArraySchema(o)
                        ? __assign({ type: "array" }, (o.length > 0 ? { items: _(o[0]) } : {}), { default: o, example: o }) : lazy_1.is$$Schema(o)
                        ? __(o)
                        : lazy_1.is$SimpleObjectSchema(o)
                            ? __assign({ type: "object", properties: Object.entries(un_x(o))
                                    .map(function (_a) {
                                    var _b;
                                    var _c = __read(_a, 2), a = _c[0], b = _c[1];
                                    return (_b = {}, _b[a] = _(b), _b);
                                })
                                    .reduce(function (a, b) { return (__assign({}, a, b)); }, {}), example: un_x(o), default: un_x(o) }, x(o)) : {};
};
exports.default = _;
//# sourceMappingURL=schema.js.map