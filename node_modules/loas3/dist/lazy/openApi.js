"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lazy_1 = require("../generated/lazy");
var info_1 = __importDefault(require("./info"));
var paths_1 = __importDefault(require("./paths"));
var schema_1 = __importDefault(require("./schema"));
var header_1 = __importDefault(require("./header"));
var requestBody_1 = __importDefault(require("./requestBody"));
var response_1 = __importDefault(require("./response"));
var parameters_1 = require("./parameters");
var _components = function (_a) {
    var responses = _a.responses, parameters = _a.parameters, examples = _a.examples, schemas = _a.schemas, requestBodies = _a.requestBodies, headers = _a.headers, securitySchemes = _a.securitySchemes, links = _a.links;
    return (__assign({}, (securitySchemes ? { securitySchemes: securitySchemes } : {}), (links ? { links: links } : {}), (examples ? { examples: examples } : {}), (responses
        ? {
            responses: Object.entries(responses)
                .map(function (_a) {
                var _b;
                var _c = __read(_a, 2), a = _c[0], b = _c[1];
                return (_b = {}, _b[a] = lazy_1.is$Reference(b) ? b : response_1.default(b), _b);
            })
                .reduce(function (a, b) { return (__assign({}, a, b)); }, {})
        }
        : {}), (parameters
        ? {
            parameters: Object.entries(parameters)
                .map(function (_a) {
                var _b;
                var _c = __read(_a, 2), a = _c[0], b = _c[1];
                return (_b = {}, _b[a] = lazy_1.is$Reference(b) ? b : parameters_1._parameter(b), _b);
            })
                .reduce(function (a, b) { return (__assign({}, a, b)); }, {})
        }
        : {}), (requestBodies
        ? {
            requestBodies: Object.entries(requestBodies)
                .map(function (_a) {
                var _b;
                var _c = __read(_a, 2), a = _c[0], b = _c[1];
                return (_b = {}, _b[a] = lazy_1.is$Reference(b) ? b : requestBody_1.default(b), _b);
            })
                .reduce(function (a, b) { return (__assign({}, a, b)); }, {})
        }
        : {}), (headers
        ? {
            headers: Object.entries(headers)
                .map(function (_a) {
                var _b;
                var _c = __read(_a, 2), a = _c[0], b = _c[1];
                return (_b = {}, _b[a] = lazy_1.is$Reference(b) ? b : header_1.default(b), _b);
            })
                .reduce(function (a, b) { return (__assign({}, a, b)); }, {})
        }
        : {}), (schemas
        ? {
            schemas: Object.entries(schemas)
                .map(function (_a) {
                var _b;
                var _c = __read(_a, 2), a = _c[0], b = _c[1];
                return (_b = {}, _b[a] = lazy_1.is$Reference(b) ? b : schema_1.default(b), _b);
            })
                .reduce(function (a, b) { return (__assign({}, a, b)); }, {})
        }
        : {})));
};
exports.default = (function (_a) {
    if (_a === void 0) { _a = {}; }
    var openapi = _a.openapi, components = _a.components, info = _a.info, paths = _a.paths, rest = __rest(_a, ["openapi", "components", "info", "paths"]);
    return (__assign({}, rest, (openapi ? { openapi: openapi } : { openapi: "3.0.0" }), { info: info_1.default(info) }, (paths ? { paths: paths_1.default(paths) } : { paths: {} }), (components
        ? {
            components: _components(components)
        }
        : {})));
});
//# sourceMappingURL=openApi.js.map