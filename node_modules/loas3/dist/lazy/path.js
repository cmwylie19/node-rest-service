"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lazy_1 = require("../generated/lazy");
var parameters_1 = __importDefault(require("./parameters"));
var operation_1 = __importDefault(require("./operation"));
var __ = function (_a, path) {
    var get = _a.get, put = _a.put, post = _a.post, _delete = _a.delete, options = _a.options, head = _a.head, patch = _a.patch, trace = _a.trace, parameters = _a.parameters, rest = __rest(_a, ["get", "put", "post", "delete", "options", "head", "patch", "trace", "parameters"]);
    return (__assign({}, rest, (parameters
        ? {
            parameters: parameters_1.default(parameters, path)
        }
        : {}), (get ? { get: operation_1.default(get, path) } : {}), (put ? { put: operation_1.default(put, path) } : {}), (post ? { post: operation_1.default(post, path) } : {}), (_delete ? { delete: operation_1.default(_delete, path) } : {}), (options ? { options: operation_1.default(options, path) } : {}), (head ? { head: operation_1.default(head, path) } : {}), (patch ? { patch: operation_1.default(patch, path) } : {}), (trace ? { trace: operation_1.default(trace, path) } : {})));
};
exports.default = (function (o, path) {
    return lazy_1.is$$PathItem(o) ? __(o, path) : { get: operation_1.default(o, path) };
});
//# sourceMappingURL=path.js.map