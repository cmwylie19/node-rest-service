"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lazy_1 = require("../generated/lazy");
var responses_1 = __importDefault(require("./responses"));
var parameters_1 = __importDefault(require("./parameters"));
var requestBody_1 = __importDefault(require("./requestBody"));
var path_1 = __importDefault(require("./path"));
var __ = function (_a, path) {
    var responses = _a.responses, parameters = _a.parameters, requestBody = _a.requestBody, callbacks = _a.callbacks, rest = __rest(_a, ["responses", "parameters", "requestBody", "callbacks"]);
    return (__assign({}, rest, (callbacks
        ? {
            callbacks: Object.entries(callbacks)
                .map(function (_a) {
                var _b;
                var _c = __read(_a, 2), a = _c[0], b = _c[1];
                return (_b = {},
                    _b[a] = lazy_1.is$Reference(b)
                        ? b
                        : Object.entries(b)
                            .map(function (_a) {
                            var _b;
                            var _c = __read(_a, 2), c = _c[0], d = _c[1];
                            return (_b = {}, _b[c] = path_1.default(d, c), _b);
                        })
                            .reduce(function (c, d) { return (__assign({}, c, d)); }, {}),
                    _b);
            })
                .reduce(function (a, b) { return (__assign({}, a, b)); }, {})
        }
        : {}), { responses: responses_1.default(responses) }, (requestBody
        ? {
            requestBody: lazy_1.is$Reference(requestBody)
                ? requestBody
                : requestBody_1.default(requestBody)
        }
        : {}), (parameters ? { parameters: parameters_1.default(parameters, path) } : {})));
};
exports.default = (function (o, path) {
    return lazy_1.is$$Operation(o) ? __(o, path) : { responses: responses_1.default(o) };
});
//# sourceMappingURL=operation.js.map