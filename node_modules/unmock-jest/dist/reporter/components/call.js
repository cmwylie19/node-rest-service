"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const Headers = ({ headers }) => {
    return React.createElement("div", { className: "call__request-headers" },
        `Headers`,
        React.createElement("ul", { className: "call__request-headers-list" }, Object.keys(headers).map(key => (React.createElement("li", { key: key },
            key,
            ": ",
            headers[key])))));
};
const Request = ({ request }) => {
    const operation = `${request.method.toUpperCase()} ${request.protocol}://${request.host}${request.path}`;
    return (React.createElement("div", { className: "call__request" },
        React.createElement("div", { className: "call__request-title" }, "Request"),
        React.createElement("p", null, `Operation: ${operation}`),
        React.createElement("p", null, `Hostname: ${request.host}`),
        React.createElement("p", null, `Path: ${request.path}`),
        React.createElement("p", null, `Protocol: ${request.protocol}`),
        React.createElement(Headers, { headers: request.headers }),
        request.body ? (React.createElement("p", null,
            `Body:`,
            React.createElement("div", { className: "call__request-body" },
                React.createElement(Body, { contents: typeof request.body === "object" ? JSON.stringify(request.body) : request.body || "" })))) : undefined));
};
const Body = ({ contents }) => {
    return React.createElement("textarea", { rows: 5, className: "call__body", readOnly: true, value: contents });
};
const Response = ({ response }) => {
    return (React.createElement("div", { className: "call__response" },
        React.createElement("div", { className: "call__response-title" }, "Response"),
        React.createElement("p", null, `Status: ${response.statusCode}`),
        React.createElement("p", null,
            `Body:`,
            React.createElement("div", { className: "call__response-body" },
                React.createElement(Body, { contents: response.body || "" })))));
};
const Call = ({ snapshot }) => {
    return (React.createElement("div", { className: "call" },
        React.createElement(Request, { request: snapshot.data.req }),
        snapshot.data.res ? React.createElement(Response, { response: snapshot.data.res }) : React.createElement("div", null, "No response")));
};
exports.default = Call;
//# sourceMappingURL=call.js.map