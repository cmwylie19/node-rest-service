import { IListener, IListenerInput } from "unmock-core";
import { ISnapshot, ISnapshotWriterReader } from "./snapshot-writer-reader";
export interface IFsSnapshotterOptions {
    outputFolder: string;
}
export declare const DEFAULT_SNAPSHOT_DIRECTORY: string;
export { ISnapshot };
export declare const resolveOptions: (userOptions: Partial<IFsSnapshotterOptions>) => IFsSnapshotterOptions;
export default class FsSnapshotter implements IListener {
    static getOrUpdateSnapshotter(newOptions?: Partial<IFsSnapshotterOptions>): FsSnapshotter;
    static extendExpectIfInJest(writer: ISnapshotWriterReader): void;
    static reset(): void;
    static removeExtendExpect(): void;
    private static instance?;
    private writer;
    private constructor();
    static get runningInJest(): boolean;
    readSnapshots(): ISnapshot[];
    deleteSnapshots(): void;
    update(newOptions: IFsSnapshotterOptions): void;
    notify(input: IListenerInput): any;
}
//# sourceMappingURL=index.d.ts.map