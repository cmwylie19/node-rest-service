"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var t = __importStar(require("io-ts-codegen"));
var fs_1 = __importDefault(require("fs"));
var prettier_1 = __importDefault(require("prettier"));
var mkdirp_1 = __importDefault(require("mkdirp"));
var path_1 = __importDefault(require("path"));
var js_yaml_1 = __importDefault(require("js-yaml"));
function getRequiredProperties(schema) {
    var required = {};
    if (schema.required) {
        schema.required.forEach(function (k) {
            required[k] = true;
        });
    }
    return required;
}
function toInterfaceCombinator(schema) {
    var required = getRequiredProperties(schema);
    var out = t.interfaceCombinator(Object.entries(schema.properties || {}).map(function (_a) {
        var _b = __read(_a, 2), k = _b[0], v = _b[1];
        return t.property(k, to(v), !required.hasOwnProperty(k));
    }));
    return out;
}
var isBoolean = function (u) {
    return u && typeof u === "object" && u.type === "boolean";
};
var isNumber = function (u) {
    return u && typeof u === "object" && u.type === "number";
};
var isInteger = function (u) {
    return u && typeof u === "object" && u.type === "integer";
};
var isStringEnum = function (u) {
    return u &&
        typeof u === "object" &&
        u.type === "string" &&
        u.enum instanceof Array &&
        u.enum.filter(function (i) { return typeof i !== "string"; }).length === 0;
};
var isNull = function (u) {
    return u && typeof u === "object" && u.type === "null";
};
var isArray = function (u) {
    return u && typeof u === "object" && u.type === "array";
};
var isRecord = function (u) {
    return u &&
        typeof u === "object" &&
        u.properties === undefined &&
        typeof u.additionalProperties === "object";
};
var isObject = function (u) {
    return u && typeof u === "object" && u.type === "object";
};
var isRef = function (u) {
    return u && typeof u === "object" && u.$ref !== undefined;
};
var isConst = function (u) {
    return u && typeof u === "object" && u.const !== undefined;
};
var isAnyOf = function (u) {
    return u && typeof u === "object" && u.anyOf !== undefined;
};
var isAllOf = function (u) {
    return u && typeof u === "object" && u.allOf !== undefined;
};
var to = function (schema) {
    return isRef(schema)
        ? t.identifier(schema.$ref.split("/").slice(-1)[0])
        : isConst(schema)
            ? t.literalCombinator(schema.const)
            : isAnyOf(schema)
                ? t.unionCombinator(schema.anyOf.map(function (i) { return to(i); }))
                : isAllOf(schema)
                    ? t.intersectionCombinator(schema.allOf.map(function (i) { return to(i); }))
                    : isRecord(schema)
                        ? t.recordCombinator(t.stringType, to(schema.additionalProperties))
                        : isObject(schema)
                            ? toInterfaceCombinator(schema)
                            : isArray(schema)
                                ? t.arrayCombinator(to(schema.items))
                                : isNumber(schema)
                                    ? t.numberType
                                    : isInteger(schema)
                                        ? t.numberType // t.intType - because this causes weirdness in the types, we let go
                                        : isNull(schema)
                                            ? t.nullType
                                            : isBoolean(schema)
                                                ? t.booleanType
                                                : isStringEnum(schema)
                                                    ? t.unionCombinator(schema.enum.map(function (i) { return t.literalCombinator(i); }))
                                                    : t.stringType;
}; // no need for string schema
var generateTypes = function (_a) {
    var input = _a.input, output = _a.output, toplevel = _a.toplevel;
    mkdirp_1.default.sync(path_1.default.dirname(output));
    var full = js_yaml_1.default.load(fs_1.default.readFileSync(input).toString());
    var definitions = full.definitions, fullObj = __rest(full, ["definitions"]);
    var toTopLevel = Object.keys(definitions).filter(function (i) {
        return i !== "JSSTAnything" &&
            i !== "JSSTTopLevel" &&
            i !== "JSSTProtoInteger" &&
            i !== "JSSTProtoNumber" &&
            i !== "JSSTProtoString" &&
            i !== "JSSTProtoArray";
    });
    var newDefinitions = __assign({}, definitions, toTopLevel
        .map(function (i) {
        var _a;
        return (_a = {},
            _a[i + "TopLevel"] = {
                allOf: [
                    { $ref: "#/definitions/" + i },
                    { $ref: "#/definitions/JSSTTopLevel" }
                ]
            },
            _a);
    })
        .reduce(function (a, b) { return (__assign({}, a, b)); }, {}));
    var declarations = Object.entries(newDefinitions)
        .map(function (_a) {
        var _b = __read(_a, 2), a = _b[0], b = _b[1];
        return t.typeDeclaration(a, to(b));
    })
        .concat(t.typeDeclaration(toplevel, to(fullObj)));
    var sorted = t.sort(declarations);
    fs_1.default.writeFileSync(output, prettier_1.default.format(["import * as t from \"io-ts\";"]
        .concat(sorted.map(function (d) { return "export " + t.printRuntime(d); }))
        .concat(sorted.map(function (d) { return "export " + t.printStatic(d); }))
        .join("\n"), {
        parser: "typescript"
    }));
};
generateTypes({
    input: "./src/schema/json-schema-strict.yml",
    output: "./src/index2.ts",
    toplevel: "JSONSchemaObject"
});
//# sourceMappingURL=generate-types.js.map