"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var t = __importStar(require("io-ts"));
var _J = function (input, u) {
    return typeof input === "object" &&
        Object.getOwnPropertyNames(input).length === 0 &&
        input.constructor === {}.constructor &&
        u.is(input);
};
exports.JSSTEmpty = function (u) {
    return new t.Type("JSSTEmpty", function (input) { return _J(input, u); }, function (input, context) {
        return _J(input, u) ? t.success(input) : t.failure(input, context);
    }, t.identity);
};
exports.JSSTEmpty_ = exports.JSSTEmpty(t.type({}));
exports.JSSTList = function (c, u) {
    return t.recursion("JSSTList", function () {
        return t.intersection([
            exports.JSSTProtoArray,
            t.intersection([
                t.type({
                    items: exports.JSSTAnything(c, u)
                }),
                t.partial({
                    uniqueItems: t.boolean,
                    minItems: t.number,
                    maxItems: t.number
                })
            ]),
            u
        ]);
    });
};
exports.JSSTList_ = exports.JSSTList(exports.JSSTEmpty_, t.type({}));
exports.JSSTAnything = function (c, u) {
    return t.recursion("JSSTAnything", function () {
        return t.union([
            exports.JSSTEmpty(u),
            exports.JSSTConst(u),
            exports.JSSTReference(u),
            exports.JSSTNull(u),
            exports.JSSTBoolean(u),
            exports.JSSTInteger(u),
            exports.JSSTNumber(u),
            exports.JSSTString(u),
            exports.JSSTArray(c, u),
            exports.JSSTObject(c, u),
            exports.JSSTOneOf(c, u),
            exports.JSSTAnyOf(c, u),
            exports.JSSTAllOf(c, u),
            exports.JSSTNot(c, u),
            c
        ]);
    });
};
exports.JSSTTuple = function (c, u) {
    return t.recursion("JSSTTuple", function () {
        return t.intersection([
            exports.JSSTProtoArray,
            t.type({
                items: t.array(exports.JSSTAnything(c, u))
            }),
            u
        ]);
    });
};
exports.JSSTTuple_ = exports.JSSTTuple(exports.JSSTEmpty_, t.type({}));
exports.JSSTObject = function (c, u) {
    return t.recursion("JSSTObject", function () {
        return t.intersection([
            t.type({
                type: t.literal("object")
            }),
            t.partial({
                required: t.array(t.string),
                dependencies: t.record(t.string, t.array(t.string)),
                additionalProperties: t.union([t.boolean, exports.JSSTAnything(c, u)]),
                patternProperties: t.record(t.string, exports.JSSTAnything(c, u)),
                properties: t.record(t.string, exports.JSSTAnything(c, u))
            }),
            u
        ]);
    });
};
exports.JSSTObject_ = exports.JSSTObject(exports.JSSTEmpty_, t.type({}));
exports.JSSTOneOf = function (c, u) {
    return t.recursion("JSSTOneOf", function () {
        return t.intersection([
            t.type({
                oneOf: t.array(exports.JSSTAnything(c, u))
            }),
            u
        ]);
    });
};
exports.JSSTOneOf_ = exports.JSSTOneOf(exports.JSSTEmpty_, t.type({}));
exports.JSSTAnyOf = function (c, u) {
    return t.recursion("JSSTAnyOf", function () {
        return t.intersection([
            t.type({
                anyOf: t.array(exports.JSSTAnything(c, u))
            }),
            u
        ]);
    });
};
exports.JSSTAnyOf_ = exports.JSSTAnyOf(exports.JSSTEmpty_, t.type({}));
exports.JSSTAllOf = function (c, u) {
    return t.recursion("JSSTAllOf", function () {
        return t.intersection([
            t.type({
                allOf: t.array(exports.JSSTAnything(c, u))
            }),
            u
        ]);
    });
};
exports.JSSTAllOf_ = exports.JSSTAllOf(exports.JSSTEmpty_, t.type({}));
exports.JSSTNot = function (c, u) {
    return t.recursion("JSSTNot", function () {
        return t.intersection([
            t.type({
                not: exports.JSSTAnything(c, u)
            }),
            u
        ]);
    });
};
exports.JSSTNot_ = exports.JSSTNot(exports.JSSTEmpty_, t.type({}));
exports.JSONPrimitive = t.union([t.number, t.boolean, t.string, t.null]);
exports.JSONValue = t.recursion("JSONValue", function () {
    return t.union([exports.JSONPrimitive, exports.JSONObject, exports.JSONArray]);
});
exports.JSONObject = t.recursion("JSONObject", function () {
    return t.record(t.string, exports.JSONValue);
});
exports.JSONArray = t.recursion("JSONArray", function () {
    return t.array(exports.JSONValue);
});
exports.JSSTConst = function (u) {
    return t.recursion("JSSTConst", function () {
        return t.intersection([t.type({ const: exports.JSONValue }), u]);
    });
};
exports.JSSTConst_ = exports.JSSTConst(t.type({}));
exports.JSSTReference = function (u) {
    return t.intersection([
        t.type({
            $ref: t.string
        }),
        u
    ]);
};
exports.JSSTReference_ = exports.JSSTReference(t.type({}));
exports.JSSTNull = function (u) {
    return t.intersection([
        t.type({
            type: t.literal("null")
        }),
        u
    ]);
};
exports.JSSTNull_ = exports.JSSTNull(t.type({}));
exports.JSSTBoolean = function (u) {
    return t.intersection([
        t.type({
            type: t.literal("boolean")
        }),
        u
    ]);
};
exports.JSSTBoolean_ = exports.JSSTBoolean(t.type({}));
exports.JSSTProtoInteger = function (u) {
    return t.intersection([
        t.type({
            type: t.literal("integer")
        }),
        u
    ]);
};
exports.JSSTSimpleInteger = function (u) {
    return t.intersection([
        exports.JSSTProtoInteger(u),
        t.partial({
            multipleOf: t.number
        })
    ]);
};
exports.JSSTSimpleInteger_ = exports.JSSTSimpleInteger(t.type({}));
exports.JSSTIntegerWithMinimum = function (u) {
    return t.intersection([
        exports.JSSTSimpleInteger(u),
        t.intersection([
            t.type({
                minimum: t.number
            }),
            t.partial({
                exclusiveMinimum: t.boolean
            })
        ])
    ]);
};
exports.JSSTIntegerWithMinimum_ = exports.JSSTIntegerWithMinimum(t.type({}));
exports.JSSTIntegerWithMaximum = function (u) {
    return t.intersection([
        exports.JSSTSimpleInteger(u),
        t.intersection([
            t.type({
                maximum: t.number
            }),
            t.partial({
                exclusiveMaximum: t.boolean
            })
        ])
    ]);
};
exports.JSSTIntegerWithMaximum_ = exports.JSSTIntegerWithMaximum(t.type({}));
exports.JSSTIntegerWithBounds = function (u) {
    return t.intersection([
        exports.JSSTSimpleInteger(u),
        t.intersection([
            t.type({
                minimum: t.number,
                maximum: t.number
            }),
            t.partial({
                exclusiveMinimum: t.boolean,
                exclusiveMaximum: t.boolean
            })
        ])
    ]);
};
exports.JSSTIntegerWithBounds_ = exports.JSSTIntegerWithBounds(t.type({}));
exports.JSSTIntegerWithNumericExclusiveMinimum = function (u) {
    return t.intersection([
        exports.JSSTSimpleInteger(u),
        t.type({
            exclusiveMinimum: t.number
        })
    ]);
};
exports.JSSTIntegerWithNumericExclusiveMinimum_ = exports.JSSTIntegerWithNumericExclusiveMinimum(t.type({}));
exports.JSSTIntegerWithNumericExclusiveMinimumAndMaximum = function (u) {
    return t.intersection([
        exports.JSSTSimpleInteger(u),
        t.intersection([
            t.type({
                exclusiveMinimum: t.number,
                maximum: t.number
            }),
            t.partial({
                exclusiveMaximum: t.boolean
            })
        ])
    ]);
};
exports.JSSTIntegerWithNumericExclusiveMinimumAndMaximum_ = exports.JSSTIntegerWithNumericExclusiveMinimumAndMaximum(t.type({}));
exports.JSSTIntegerWithNumericExclusiveMaximum = function (u) {
    return t.intersection([
        exports.JSSTSimpleInteger(u),
        t.type({
            exclusiveMaximum: t.number
        })
    ]);
};
exports.JSSTIntegerWithNumericExclusiveMaximum_ = exports.JSSTIntegerWithNumericExclusiveMaximum(t.type({}));
exports.JSSTIntegerWithNumericExclusiveMaximumAndMinimum = function (u) {
    return t.intersection([
        exports.JSSTSimpleInteger(u),
        t.intersection([
            t.type({
                exclusiveMaximum: t.number,
                minimum: t.number
            }),
            t.partial({
                exclusiveMinimum: t.boolean
            })
        ])
    ]);
};
exports.JSSTIntegerWithNumericExclusiveMaximumAndMinimum_ = exports.JSSTIntegerWithNumericExclusiveMaximumAndMinimum(t.type({}));
exports.JSSTIntegerWithNumericExclusiveBounds = function (u) {
    return t.intersection([
        exports.JSSTSimpleInteger(u),
        t.type({
            exclusiveMinimum: t.number,
            exclusiveMaximum: t.number
        })
    ]);
};
exports.JSSTIntegerWithNumericExclusiveBounds_ = exports.JSSTIntegerWithNumericExclusiveBounds(t.type({}));
exports.JSSTIntegerEnum = function (u) {
    return t.intersection([
        exports.JSSTProtoInteger(u),
        t.type({
            enum: t.array(t.number)
        })
    ]);
};
exports.JSSTIntegerEnum_ = exports.JSSTIntegerEnum(t.type({}));
exports.JSSTInteger = function (u) {
    return t.union([
        exports.JSSTSimpleInteger(u),
        exports.JSSTIntegerWithMinimum(u),
        exports.JSSTIntegerWithMaximum(u),
        exports.JSSTIntegerWithBounds(u),
        exports.JSSTIntegerWithNumericExclusiveMinimum(u),
        exports.JSSTIntegerWithNumericExclusiveMinimumAndMaximum(u),
        exports.JSSTIntegerWithNumericExclusiveMaximum(u),
        exports.JSSTIntegerWithNumericExclusiveMaximumAndMinimum(u),
        exports.JSSTIntegerWithNumericExclusiveBounds(u),
        exports.JSSTIntegerEnum(u)
    ]);
};
exports.JSSTInteger_ = exports.JSSTInteger(t.type({}));
exports.JSSTProtoNumber = function (u) {
    return t.intersection([
        t.type({
            type: t.literal("number")
        }),
        u
    ]);
};
exports.JSSTProtoNumber_ = exports.JSSTProtoNumber(t.type({}));
exports.JSSTSimpleNumber = function (u) {
    return t.intersection([
        exports.JSSTProtoNumber(u),
        t.partial({
            minimum: t.number,
            maximum: t.number,
            multipleOf: t.number
        })
    ]);
};
exports.JSSTSimpleNumber_ = exports.JSSTSimpleNumber(t.type({}));
exports.JSSTNumberEnum = function (u) {
    return t.intersection([
        exports.JSSTProtoNumber(u),
        t.type({
            enum: t.array(t.number)
        })
    ]);
};
exports.JSSTNumberEnum_ = exports.JSSTNumberEnum(t.type({}));
exports.JSSTNumber = function (u) {
    return t.union([exports.JSSTSimpleNumber(u), exports.JSSTNumberEnum(u)]);
};
exports.JSSTNumber_ = exports.JSSTNumber(t.type({}));
exports.JSSTProtoString = function (u) {
    return t.intersection([
        t.type({
            type: t.literal("string")
        }),
        u
    ]);
};
exports.JSSTFaker = t.union([
    t.literal("address.zipCode"),
    t.literal("address.city"),
    t.literal("address.cityPrefix"),
    t.literal("address.citySuffix"),
    t.literal("address.streetName"),
    t.literal("address.streetAddress"),
    t.literal("address.streetSuffix"),
    t.literal("address.streetPrefix"),
    t.literal("address.secondaryAddress"),
    t.literal("address.county"),
    t.literal("address.country"),
    t.literal("address.countryCode"),
    t.literal("address.state"),
    t.literal("address.stateAbbr"),
    t.literal("address.latitude"),
    t.literal("address.longitude"),
    t.literal("commerce.color"),
    t.literal("commerce.department"),
    t.literal("commerce.productName"),
    t.literal("commerce.price"),
    t.literal("commerce.productAdjective"),
    t.literal("commerce.productMaterial"),
    t.literal("commerce.product"),
    t.literal("company.suffixes"),
    t.literal("company.companyName"),
    t.literal("company.companySuffix"),
    t.literal("company.catchPhrase"),
    t.literal("company.bs"),
    t.literal("company.catchPhraseAdjective"),
    t.literal("company.catchPhraseDescriptor"),
    t.literal("company.catchPhraseNoun"),
    t.literal("company.bsAdjective"),
    t.literal("company.bsBuzz"),
    t.literal("company.bsNoun"),
    t.literal("database.column"),
    t.literal("database.type"),
    t.literal("database.collation"),
    t.literal("database.engine"),
    t.literal("date.past"),
    t.literal("date.future"),
    t.literal("date.between"),
    t.literal("date.recent"),
    t.literal("date.soon"),
    t.literal("date.month"),
    t.literal("date.weekday"),
    t.literal("finance.account"),
    t.literal("finance.accountName"),
    t.literal("finance.mask"),
    t.literal("finance.amount"),
    t.literal("finance.transactionType"),
    t.literal("finance.currencyCode"),
    t.literal("finance.currencyName"),
    t.literal("finance.currencySymbol"),
    t.literal("finance.bitcoinAddress"),
    t.literal("finance.ethereumAddress"),
    t.literal("finance.iban"),
    t.literal("finance.bic"),
    t.literal("hacker.abbreviation"),
    t.literal("hacker.adjective"),
    t.literal("hacker.noun"),
    t.literal("hacker.verb"),
    t.literal("hacker.ingverb"),
    t.literal("hacker.phrase"),
    t.literal("helpers.randomize"),
    t.literal("helpers.slugify"),
    t.literal("helpers.replaceSymbolWithNumber"),
    t.literal("helpers.replaceSymbols"),
    t.literal("helpers.shuffle"),
    t.literal("helpers.mustache"),
    t.literal("helpers.createCard"),
    t.literal("helpers.contextualCard"),
    t.literal("helpers.userCard"),
    t.literal("helpers.createTransaction"),
    t.literal("image.image"),
    t.literal("image.avatar"),
    t.literal("image.imageUrl"),
    t.literal("image.abstract"),
    t.literal("image.animals"),
    t.literal("image.business"),
    t.literal("image.cats"),
    t.literal("image.city"),
    t.literal("image.food"),
    t.literal("image.nightlife"),
    t.literal("image.fashion"),
    t.literal("image.people"),
    t.literal("image.nature"),
    t.literal("image.sports"),
    t.literal("image.technics"),
    t.literal("image.transport"),
    t.literal("image.dataUri"),
    t.literal("internet.avatar"),
    t.literal("internet.email"),
    t.literal("internet.exampleEmail"),
    t.literal("internet.userName"),
    t.literal("internet.protocol"),
    t.literal("internet.url"),
    t.literal("internet.domainName"),
    t.literal("internet.domainSuffix"),
    t.literal("internet.domainWord"),
    t.literal("internet.ip"),
    t.literal("internet.ipv6"),
    t.literal("internet.userAgent"),
    t.literal("internet.color"),
    t.literal("internet.mac"),
    t.literal("internet.password"),
    t.literal("lorem.word"),
    t.literal("lorem.words"),
    t.literal("lorem.sentence"),
    t.literal("lorem.slug"),
    t.literal("lorem.sentences"),
    t.literal("lorem.paragraph"),
    t.literal("lorem.paragraphs"),
    t.literal("lorem.text"),
    t.literal("lorem.lines"),
    t.literal("name.firstName"),
    t.literal("name.lastName"),
    t.literal("name.findName"),
    t.literal("name.jobTitle"),
    t.literal("name.prefix"),
    t.literal("name.suffix"),
    t.literal("name.title"),
    t.literal("name.jobDescriptor"),
    t.literal("name.jobArea"),
    t.literal("name.jobType"),
    t.literal("phone.phoneNumber"),
    t.literal("phone.phoneNumberFormat"),
    t.literal("phone.phoneFormats"),
    t.literal("random.number"),
    t.literal("random.float"),
    t.literal("random.arrayElement"),
    t.literal("random.objectElement"),
    t.literal("random.uuid"),
    t.literal("random.boolean"),
    t.literal("random.word"),
    t.literal("random.words"),
    t.literal("random.image"),
    t.literal("random.locale"),
    t.literal("random.alphaNumeric"),
    t.literal("random.hexaDecimal"),
    t.literal("system.fileName"),
    t.literal("system.commonFileName"),
    t.literal("system.mimeType"),
    t.literal("system.commonFileType"),
    t.literal("system.commonFileExt"),
    t.literal("system.fileType"),
    t.literal("system.fileExt"),
    t.literal("system.directoryPath"),
    t.literal("system.filePath"),
    t.literal("system.semver")
]);
exports.JSSTProtoString_ = exports.JSSTProtoString(t.type({}));
exports.JSSTSimpleString = function (u) {
    return t.intersection([
        exports.JSSTProtoString(u),
        t.partial({
            faker: exports.JSSTFaker
        })
    ]);
};
exports.JSSTSimpleString_ = exports.JSSTSimpleString(t.type({}));
exports.JSSTRegex = function (u) {
    return t.intersection([
        exports.JSSTProtoString(u),
        t.type({
            pattern: t.string
        })
    ]);
};
exports.JSSTRegex_ = exports.JSSTRegex(t.type({}));
exports.JSSTStringEnum = function (u) {
    return t.intersection([
        exports.JSSTProtoString(u),
        t.type({
            enum: t.array(t.string)
        })
    ]);
};
exports.JSSTStringEnum_ = exports.JSSTStringEnum(t.type({}));
exports.JSSTString = function (u) {
    return t.union([exports.JSSTSimpleString(u), exports.JSSTRegex(u), exports.JSSTStringEnum(u)]);
};
exports.JSSTString_ = exports.JSSTString(t.type({}));
exports.JSSTProtoArray = t.type({
    type: t.literal("array")
});
exports.JSSTArray = function (c, u) {
    return t.union([exports.JSSTList(c, u), exports.JSSTTuple(c, u)]);
};
exports.JSSTArray_ = exports.JSSTArray(exports.JSSTEmpty_, t.type({}));
exports.JSSTTopLevel = function (c, u) {
    return t.partial({
        $schema: t.string,
        $id: t.string,
        definitions: t.record(t.string, exports.JSSTAnything(c, u))
    });
};
exports.JSSTTopLevel_ = exports.JSSTTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTEmptyTopLevel = function (c, u) {
    return t.intersection([exports.JSSTEmpty(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTEmptyTopLevel_ = exports.JSSTEmptyTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTConstTopLevel = function (c, u) {
    return t.intersection([exports.JSSTConst(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTConstTopLevel_ = exports.JSSTConstTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTReferenceTopLevel = function (c, u) {
    return t.intersection([exports.JSSTReference(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTReferenceTopLevel_ = exports.JSSTReferenceTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTNullTopLevel = function (c, u) {
    return t.intersection([exports.JSSTNull(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTNullTopLevel_ = exports.JSSTNullTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTBooleanTopLevel = function (c, u) {
    return t.intersection([exports.JSSTBoolean(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTBooleanTopLevel_ = exports.JSSTBooleanTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerTopLevel = function (c, u) {
    return t.intersection([exports.JSSTInteger(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTIntegerTopLevel_ = exports.JSSTIntegerTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTSimpleIntegerTopLevel = function (c, u) {
    return t.intersection([exports.JSSTSimpleInteger(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTSimpleIntegerTopLevel_ = exports.JSSTSimpleIntegerTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerWithMinimumTopLevel = function (c, u) { return t.intersection([exports.JSSTIntegerWithMinimum(u), exports.JSSTTopLevel(c, u)]); };
exports.JSSTIntegerWithMinimumTopLevelTopLevel_ = exports.JSSTIntegerWithMinimumTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerWithMaximumTopLevel = function (c, u) { return t.intersection([exports.JSSTIntegerWithMaximum(u), exports.JSSTTopLevel(c, u)]); };
exports.JSSTIntegerWithMaximumTopLevel_ = exports.JSSTIntegerWithMaximumTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerWithBoundsTopLevel = function (c, u) { return t.intersection([exports.JSSTIntegerWithBounds(u), exports.JSSTTopLevel(c, u)]); };
exports.JSSTIntegerWithBoundsTopLevel_ = exports.JSSTIntegerWithBoundsTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerWithNumericExclusiveMinimumTopLevel = function (c, u) {
    return t.intersection([
        exports.JSSTIntegerWithNumericExclusiveMinimum(u),
        exports.JSSTTopLevel(c, u)
    ]);
};
exports.JSSTIntegerWithNumericExclusiveMinimumTopLevel_ = exports.JSSTIntegerWithNumericExclusiveMinimumTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerWithNumericExclusiveMinimumAndMaximumTopLevel = function (c, u) {
    return t.intersection([
        exports.JSSTIntegerWithNumericExclusiveMinimumAndMaximum(u),
        exports.JSSTTopLevel(c, u)
    ]);
};
exports.JSSTIntegerWithNumericExclusiveMinimumAndMaximumTopLevel_ = exports.JSSTIntegerWithNumericExclusiveMinimumAndMaximumTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerWithNumericExclusiveMaximumTopLevel = function (c, u) {
    return t.intersection([
        exports.JSSTIntegerWithNumericExclusiveMaximum(u),
        exports.JSSTTopLevel(c, u)
    ]);
};
exports.JSSTIntegerWithNumericExclusiveMaximumTopLevel_ = exports.JSSTIntegerWithNumericExclusiveMaximumTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerWithNumericExclusiveMaximumAndMinimumTopLevel = function (c, u) {
    return t.intersection([
        exports.JSSTIntegerWithNumericExclusiveMaximumAndMinimum(u),
        exports.JSSTTopLevel(c, u)
    ]);
};
exports.JSSTIntegerWithNumericExclusiveMaximumAndMinimumTopLevel_ = exports.JSSTIntegerWithNumericExclusiveMaximumAndMinimumTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerWithNumericExclusiveBoundsTopLevel = function (c, u) {
    return t.intersection([
        exports.JSSTIntegerWithNumericExclusiveBounds(u),
        exports.JSSTTopLevel(c, u)
    ]);
};
exports.JSSTIntegerWithNumericExclusiveBoundsTopLevel_ = exports.JSSTIntegerWithNumericExclusiveBoundsTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTIntegerEnumTopLevel = function (c, u) {
    return t.intersection([exports.JSSTIntegerEnum(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTIntegerEnumTopLevel_ = exports.JSSTIntegerEnumTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTNumberTopLevel = function (c, u) {
    return t.intersection([exports.JSSTNumber(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTNumberTopLevel_ = exports.JSSTNumberTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTSimpleNumberTopLevel = function (c, u) {
    return t.intersection([exports.JSSTSimpleNumber(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTSimpleNumberTopLevel_ = exports.JSSTSimpleNumberTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTNumberEnumTopLevel = function (c, u) {
    return t.intersection([exports.JSSTNumberEnum(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTNumberEnumTopLevel_ = exports.JSSTNumberEnumTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTAnyOfTopLevel = function (c, u) {
    return t.intersection([exports.JSSTAnyOf(c, u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTAnyOfTopLevel_ = exports.JSSTAnyOfTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTAllOfTopLevel = function (c, u) {
    return t.intersection([exports.JSSTAllOf(c, u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTAllOfTopLevel_ = exports.JSSTAllOfTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTNotTopLevel = function (c, u) {
    return t.intersection([exports.JSSTNot(c, u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTNotTopLevel_ = exports.JSSTNotTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTOneOfTopLevel = function (c, u) {
    return t.intersection([exports.JSSTOneOf(c, u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTOneOfTopLevel_ = exports.JSSTOneOfTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTStringTopLevel = function (c, u) {
    return t.intersection([exports.JSSTString(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTStringTopLevel_ = exports.JSSTStringTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTSimpleStringTopLevel = function (c, u) {
    return t.intersection([exports.JSSTSimpleString(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTSimpleStringTopLevel_ = exports.JSSTSimpleStringTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTRegexTopLevel = function (c, u) {
    return t.intersection([exports.JSSTRegex(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTRegexTopLevel_ = exports.JSSTRegexTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTStringEnumTopLevel = function (c, u) {
    return t.intersection([exports.JSSTStringEnum(u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTStringEnumTopLevel_ = exports.JSSTStringEnumTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTArrayTopLevel = function (c, u) {
    return t.intersection([exports.JSSTArray(c, u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTArrayTopLevel_ = exports.JSSTArrayTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTListTopLevel = function (c, u) {
    return t.intersection([exports.JSSTList(c, u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTListTopLevel_ = exports.JSSTListTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTTupleTopLevel = function (c, u) {
    return t.intersection([exports.JSSTTuple(c, u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTTupleTopLevel_ = exports.JSSTTupleTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTObjectTopLevel = function (c, u) {
    return t.intersection([exports.JSSTObject(c, u), exports.JSSTTopLevel(c, u)]);
};
exports.JSSTObjectTopLevel_ = exports.JSSTObjectTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSSTGenericTopLevel = function (c, u) {
    return t.intersection([c, exports.JSSTTopLevel(c, u)]);
};
exports.JSSTGenericTopLevel_ = exports.JSSTGenericTopLevel(exports.JSSTEmpty_, t.type({}));
exports.JSONSchemaObject = function (c, u) {
    return t.recursion("JSONSchemaObject", function () {
        return t.union([
            exports.JSSTEmptyTopLevel(c, u),
            exports.JSSTConstTopLevel(c, u),
            exports.JSSTReferenceTopLevel(c, u),
            exports.JSSTNullTopLevel(c, u),
            exports.JSSTBooleanTopLevel(c, u),
            exports.JSSTIntegerTopLevel(c, u),
            exports.JSSTSimpleIntegerTopLevel(c, u),
            exports.JSSTIntegerWithMinimumTopLevel(c, u),
            exports.JSSTIntegerWithMaximumTopLevel(c, u),
            exports.JSSTIntegerWithBoundsTopLevel(c, u),
            exports.JSSTIntegerWithNumericExclusiveMinimumTopLevel(c, u),
            exports.JSSTIntegerWithNumericExclusiveMinimumAndMaximumTopLevel(c, u),
            exports.JSSTIntegerWithNumericExclusiveMaximumTopLevel(c, u),
            exports.JSSTIntegerWithNumericExclusiveMaximumAndMinimumTopLevel(c, u),
            exports.JSSTIntegerWithNumericExclusiveBoundsTopLevel(c, u),
            exports.JSSTIntegerEnumTopLevel(c, u),
            exports.JSSTNumberTopLevel(c, u),
            exports.JSSTSimpleNumberTopLevel(c, u),
            exports.JSSTNumberEnumTopLevel(c, u),
            exports.JSSTAnyOfTopLevel(c, u),
            exports.JSSTAllOfTopLevel(c, u),
            exports.JSSTNotTopLevel(c, u),
            exports.JSSTOneOfTopLevel(c, u),
            exports.JSSTStringTopLevel(c, u),
            exports.JSSTSimpleStringTopLevel(c, u),
            exports.JSSTRegexTopLevel(c, u),
            exports.JSSTStringEnumTopLevel(c, u),
            exports.JSSTArrayTopLevel(c, u),
            exports.JSSTListTopLevel(c, u),
            exports.JSSTTupleTopLevel(c, u),
            exports.JSSTObjectTopLevel(c, u),
            exports.JSSTGenericTopLevel(c, u)
        ]);
    });
};
//# sourceMappingURL=index.js.map