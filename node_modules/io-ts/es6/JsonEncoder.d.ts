/**
 * @since 2.2.3
 */
import { Contravariant1 } from 'fp-ts/es6/Contravariant';
import * as E from './Encoder';
import { Schemable1 } from './Schemable';
/**
 * @since 2.2.3
 */
export interface JsonArray extends Array<Json> {
}
/**
 * @since 2.2.3
 */
export declare type JsonObject = {
    [key: string]: Json;
};
/**
 * @since 2.2.3
 */
export declare type Json = null | string | number | boolean | JsonObject | JsonArray;
/**
 * @since 2.2.3
 */
export interface JsonEncoder<A> {
    readonly encode: (a: A) => Json;
}
/**
 * @since 2.2.3
 */
export declare type TypeOf<E> = E.TypeOf<E>;
/**
 * @since 2.2.3
 */
export declare const id: JsonEncoder<Json>;
/**
 * @since 2.2.3
 */
export declare const nullable: <A>(or: JsonEncoder<A>) => JsonEncoder<null | A>;
/**
 * @since 2.2.3
 */
export declare const type: <A>(properties: {
    [K in keyof A]: JsonEncoder<A[K]>;
}) => JsonEncoder<A>;
/**
 * @since 2.2.3
 */
export declare const partial: <A>(properties: {
    [K in keyof A]: JsonEncoder<A[K]>;
}) => JsonEncoder<Partial<A>>;
/**
 * @since 2.2.3
 */
export declare const record: <A>(codomain: JsonEncoder<A>) => JsonEncoder<Record<string, A>>;
/**
 * @since 2.2.3
 */
export declare const array: <A>(items: JsonEncoder<A>) => JsonEncoder<Array<A>>;
/**
 * @since 2.2.3
 */
export declare const tuple: <A extends ReadonlyArray<unknown>>(...components: {
    [K in keyof A]: JsonEncoder<A[K]>;
}) => JsonEncoder<A>;
/**
 * @since 2.2.3
 */
export declare const intersection: <A, B>(left: JsonEncoder<A>, right: JsonEncoder<B>) => JsonEncoder<A & B>;
/**
 * @since 2.2.3
 */
export declare const sum: <T extends string>(tag: T) => <A>(members: {
    [K in keyof A]: JsonEncoder<A[K]>;
}) => JsonEncoder<A[keyof A]>;
/**
 * @since 2.2.3
 */
export declare const lazy: <A>(f: () => JsonEncoder<A>) => JsonEncoder<A>;
/**
 * @since 2.2.3
 */
export declare const contramap: <A, B>(f: (b: B) => A) => (fa: JsonEncoder<A>) => JsonEncoder<B>;
/**
 * @since 2.2.3
 */
export declare const URI = "io-ts/JsonEncoder";
/**
 * @since 2.2.3
 */
export declare type URI = typeof URI;
declare module 'fp-ts/es6/HKT' {
    interface URItoKind<A> {
        readonly [URI]: JsonEncoder<A>;
    }
}
/**
 * @since 2.2.3
 */
export declare const contravariantJsonEncoder: Contravariant1<URI>;
/**
 * @since 2.2.3
 */
export declare const schemableJsonEncoder: Schemable1<URI>;
