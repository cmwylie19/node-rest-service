import { ExtendedJSONSchema, IFluentDynamicService } from "../nock";
import { IObjectToService, IServiceCore } from "./interfaces";
import { Service } from "./service";
export declare type NockAPI = (baseUrl: string, nameOrHeaders?: string | {
    reqheaders?: Record<string, ExtendedJSONSchema>;
}, name?: string) => IFluentDynamicService;
export declare const addFromNock: (serviceStore: ServiceStore) => NockAPI;
export declare class ServiceStore {
    private static extractCoresAndServices;
    services: Record<string, Service>;
    constructor(coreServices: IServiceCore[]);
    get cores(): Record<string, IServiceCore>;
    update(coreServices: IServiceCore[]): void;
    add(service: Service): void;
    updateOrAddService(service: Service): void;
    mock(baseUrl: string, nameOrHeaders?: string | {
        reqheaders?: Record<string, ExtendedJSONSchema>;
    }, name?: string): IFluentDynamicService;
    updateOrAdd(input: IObjectToService): ServiceStore;
    removeAll(): void;
    resetServices(): void;
    private serviceExists;
}
//# sourceMappingURL=serviceStore.d.ts.map